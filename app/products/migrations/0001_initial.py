# Generated by Django 2.1.2 on 2018-11-23 20:09

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contents', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('parent_comment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to='products.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Ordering',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reward_amount', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='OrderingInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=20)),
                ('phone_number', models.CharField(blank=True, max_length=11, validators=[django.core.validators.RegexValidator(message='Phone number must be 11 numbers', regex='\\d{11}')])),
                ('address1', models.CharField(max_length=30)),
                ('address2', models.CharField(max_length=30)),
                ('comment', models.TextField()),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('cancel_at', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=200)),
                ('product_option', models.TextField()),
                ('product_price', models.PositiveIntegerField(default=0)),
                ('product_shipping_charge', models.PositiveIntegerField(default=0)),
                ('product_total_count', models.PositiveIntegerField(default=0)),
                ('product_sold_count', models.PositiveIntegerField(default=0)),
                ('product_on_sale', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('store_name', models.CharField(max_length=100)),
                ('store_type', models.CharField(max_length=100)),
                ('store_company_name', models.CharField(max_length=100)),
                ('store_img', models.CharField(max_length=200)),
                ('store_detail_img', models.CharField(max_length=200)),
                ('store_interested_count', models.PositiveIntegerField(blank=True, default=0)),
                ('store_is_funding', models.CharField(choices=[('YA', 'Yes'), ('NA', 'No')], default='YA', max_length=3)),
                ('store_description', models.TextField(blank=True)),
                ('store_like_user', models.ManyToManyField(blank=True, related_name='like_product', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-pk'],
            },
        ),
        migrations.CreateModel(
            name='StoreLike',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('liked_at', models.DateTimeField(auto_now_add=True)),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='products.Store')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='like_products', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='store',
            field=models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='rewards', to='products.Store'),
        ),
        migrations.AddField(
            model_name='ordering',
            name='ordering_info',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order', to='products.OrderingInfo'),
        ),
        migrations.AddField(
            model_name='ordering',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='funding', to='products.Product'),
        ),
        migrations.AddField(
            model_name='ordering',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='products.Product'),
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL),
        ),
    ]
